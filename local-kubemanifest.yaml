apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml -o manifests.yml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: laravel-app
      name: laravel-app
    spec:
      type: NodePort
      ports:
        - name: "80"
          port: 80
          targetPort: 80
      selector:
        io.kompose.service: laravel-app
    status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml -o manifests.yml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql-db
      name: mysql-db
    spec:
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: mysql-db
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml -o manifests.yml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: laravel-app
      name: laravel-app
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: laravel-app
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yaml -o manifests.yml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/mynetwork: "true"
            io.kompose.service: laravel-app
        spec:
          containers:
            - env:
                - name: APACHE_RUN_GROUP
                  value: "www-data"
                - name: APACHE_RUN_USER
                  value: "www-data"
              image: aminfourty7/laravel-kubernetes-main:latest
              name: laravel-app
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml -o manifests.yml
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: mysql-db
      name: mysql-db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mysql-db
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yaml -o manifests.yml
            kompose.version: 1.26.0 (40646f47)
          creationTimestamp: null
          labels:
            io.kompose.network/mynetwork: "true"
            io.kompose.service: mysql-db
        spec:
          containers:
            - env:
                - name: MYSQL_DATABASE
                  value:  laravel
                - name: MYSQL_PASSWORD
                  value: password
                - name: MYSQL_ROOT_PASSWORD
                  value: password
                - name: MYSQL_USER
                  value: laravel
              image: mysql:5.7
              name: mysql-db
              ports:
                - containerPort: 3306
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/mysql
                  name: mysql-db-claim0
          restartPolicy: Always
          volumes:
            - name: mysql-db-claim0
              persistentVolumeClaim:
                claimName: mysql-db-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: mysql-db-claim0
      labels:
        io.kompose.service: mysql-db-claim0
    spec:
      storageClassName: local-storage
      capacity:
        storage: 1Gi
      volumeMode: Filesystem
      accessModes:
        - ReadWriteOnce
      persistentVolumeReclaimPolicy: Retain  
      hostPath:
        path: "/mnt/data"
    status: {}  
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: mysql-db-claim0
      creationTimestamp: null
      labels:
        io.kompose.service: mysql-db-claim0
    spec:
      volumeName: mysql-db-claim0
      storageClassName: local-storage
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
    status: {}
kind: List
metadata: {}


name: CI/CD laravel-app

on:
  push:
    branches: [ main ]

jobs:
  build-nodeapp-dockerimage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build-nodeapp-image
        run: |
          docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
          docker build -t aminfourty7/test-laravel:latest .
          docker push aminfourty7/test-laravel:latest

  get-ec2-ip-addr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: get ip    
        run: |
          aws ec2 describe-instances \
          --query 'Reservations[*].Instances[*].PublicIpAddress' \
          --filters "Name=tag:project,Values=docker-server" \
          --output text >> ~/project/inventory
          cat ~/project/inventory
  run-containers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - add_ssh_keys:
          fingerprints: ["9f:7e:0b:c8:94:45:60:f3:7a:95:ef:73:ca:42:dd:62"]
      - name: Install dependencies
        run: apk add --update ansible tar gzip aws-cli
      - attach_workspace:
          at: ~/
      - name: run containers
        run: ansible-playbook -i inventory docker-ansible.yaml                            
#workflows:
#  docker-deployment:
#    jobs:
#      - build-nodejsapp
#      - scan-nodejsapp:
#          requires: [build-nodejsapp]
#      - build-nodeapp-dockerimage:
#          requires: [scan-nodejsapp]
#      - build-nginx-dockerimage:
#          requires: [scan-nodejsapp]
#          filters:
#            branches:
#              only: [main]
#      - get-instance-ip:
#          requires: [build-nginx-dockerimage, build-nodeapp-dockerimage]        
#      - run-containers:
#          requires: [get-instance-ip]